:root
{
    --primary-text-color: #374151;
    --secondary-text-color: #6b7280;
    --primary-border-radius: .4rem;
    --primary-padding: .4rem;
    --primary-margin: .4rem;
    --primary-gap: .4rem;
    --primary-font-size: 1.05rem;
    --secondary-font-size: 0.6rem;
    --primary-background-color: #f3f4f6;
    --primary-transition-duration: 0.2s;
    --primary-box-shadow: 0px 1px 0px 0px #9b9c9d;
    --bold-font-weight: 700;
    --light-green-color: #baffde;
    --light-red-color: #ffbaba;
}

html,
body
{
    color: var(--primary-text-color);
    font-family: "Segoe UI", Tahoma, sans-serif;
    font-size: var(--primary-font-size);
    max-height: 600px;
    max-width: 800px;
    margin: 0;
    padding: 0;
    width: 260px;
}

button
{
    all: unset;
    background: none;
    background-color: var(--primary-background-color);
    border: none;
    border-radius: var(--primary-border-radius);
    box-shadow: var(--primary-box-shadow);
    color: inherit;
    cursor: pointer;
    display: grid;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    justify-content: center;
    justify-items: center;
    padding: var(--primary-padding);
    transition: filter var(--primary-transition-duration);
}

button:hover
{
    filter: brightness(.9);
}

button:not(#current-prayer).prayer:hover
{
    cursor: default;
    filter: none;
}

button#current-prayer:hover
{
    transition: var(--primary-transition-duration);
}

/* TODO give option to toggle */
button.horizontal
{
    display: flex;
    gap: var(--primary-gap);
}

svg
{
    height: auto;
}

svg>path
{
    fill: var(--primary-text-color);
}

.popup-container
{
    margin: var(--primary-margin);
}

.header
{
    align-items: center;
    border-bottom: 1px solid #ccc;
    display: flex;
    justify-content: space-between;
    padding-bottom: var(--primary-padding);
}

#logo-icon
{
    width: 32px;
    height: 32px;
}

.title
{
    font-weight: var(--bold-font-weight);
}

.icon-button
{
    display: flex;
    transition: filter 0.3s;
    width: 24px;
}

.icon-button:active
{
    filter: brightness(.8);
}

#notifications-button
{
    background-color: var(--light-red-color);
    width: 14px;
}

#notifications-button.active
{
    background-color: var(--light-green-color);
}

.icon-button:not(#notifications-button).active
{
    filter: brightness(.8);
}

.content
{
    display: flex;
    position: relative;
    transition: transform 0.3s ease;
}

.content.show-settings #main-page
{
    opacity: 0;
    pointer-events: none;
}

.content.show-settings #settings-page
{
    opacity: 1;
    pointer-events: auto;
}

.page
{
    flex-shrink: 0;
    opacity: 1;
    position: absolute;
    transition: opacity var(--primary-transition-duration) ease;
    width: 100%;
}

.grid-container
{
    display: grid;
    gap: var(--primary-gap);
    padding-bottom: var(--primary-padding);
    padding-top: var(--primary-padding);
}

.prayer.display-flex
{
    display: flex;
    padding: calc(var(--primary-padding) * 2);
    gap: var(--primary-gap);
}

.prayer-name
{
    font-weight: var(--bold-font-weight)
}

.prayer-time
{
    color: var(--secondary-text-color);
}

#settings-page
{
    opacity: 0;
    pointer-events: none;
}

#settings-page .grid-container
{
    gap: 0;
    padding-top: 0;
}

#settings-page .grid-container>div
{
    border-bottom: 1px solid #ccc;
    padding-bottom: var(--primary-padding);
    padding-top: var(--primary-padding);
}

#settings-page .grid-container>div:last-child
{
    border-bottom: none;
}

.location-container
{
    position: relative;
    text-align: center;
}

.location-name
{
    font-weight: var(--bold-font-weight);
    text-decoration: underline;
}

.location-name:hover
{
    cursor: pointer;
    filter: brightness(1.9);
}

.options
{
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: var(--primary-border-radius);
    color: var(--secondary-text-color);
    display: none;
    position: absolute;
    text-align: center;
    width: 100%;
    z-index: 1000;
}

.options>div
{
    border-bottom: 1px solid #eee;
    cursor: pointer;
    padding: var(--primary-padding);
    transition: background-color var(--primary-transition-duration);
}

.options>div:hover
{
    background-color: #f3f4f6;
}

.options>div:last-child
{
    border-bottom: none;
}

.method-container
{
    align-items: center;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    gap: var(--primary-gap);
    position: relative;
}

.method-select-wrapper
{
    flex-grow: 1;
    justify-items: center;
    position: relative;
    width: 100%;
}

.method-select-wrapper>.options
{
    font-size: var(--secondary-font-size);
}

.method-select-wrapper>.options>div.selected
{
    background-color: #baebff;
    color: var(--primary-text-color);
    font-weight: var(--bold-font-weight);
}

.method-select
{
    background-color: var(--primary-background-color);
    border-radius: var(--primary-border-radius);
    box-sizing: border-box;
    font-size: var(--secondary-font-size);
    padding-bottom: var(--primary-padding);
    padding-top: var(--primary-padding);
    text-align: center;
    width: 100%;
}

.method-select:hover
{
    cursor: pointer;
    filter: brightness(.9);
}

.loader
{
    animation: rotate .5s linear infinite;
    border-radius: 50%;
    height: 48px;
    left: 50%;
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%;
    width: 48px;
    z-index: 2000;
}

.loader::before,
.loader::after
{
    animation: prixClipFix 1s ease-in-out infinite alternate;
    border: 5px solid #FFF;
    border-radius: 50%;
    box-sizing: border-box;
    content: "";
    inset: 0px;
    position: absolute;
}

.loader::after
{
    border-color: #FF3D00;
    transform: rotate3d(90, 90, 0, 180deg);
}

@keyframes rotate
{
    from
    {
        transform: translate(-50%, -50%) rotate(0deg);
    }

    to
    {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

@keyframes prixClipFix
{
    0%
    {
        clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);
    }

    50%
    {
        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);
    }

    100%
    {
        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%);
    }
}

/* ----------------------------------------------- */

.flex-container
{
    display: flex;
    gap: var(--primary-padding);
    width: 100%;
}