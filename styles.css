:root
{
    --primary-text-color: #374151;
    --secondary-text-color: #6b7280;
    --primary-border-radius: .4rem;
    --primary-padding: .4rem;
    --primary-margin: .4rem;
    --primary-gap: .4rem;
    --primary-font-size: 1.05rem;
    --primary-background-color: #f3f4f6;
    --primary-transition-duration: 0.2s;
    --primary-box-shadow: 0px 1px 0px 0px #9b9c9d;
    --bold-font-weight: 700;
    --button-hover-filter: brightness(.9);
}

html,
body
{
    font-family: "Segoe UI", Tahoma, sans-serif;
    font-size: var(--primary-font-size);
    max-height: 600px;
    max-width: 800px;
    margin: 0;
    padding: 0;
    width: 260px;
}

button
{
    all: unset;
    background: none;
    background-color: var(--primary-background-color);
    border: none;
    border-radius: var(--primary-border-radius);
    box-shadow: var(--primary-box-shadow);
    color: inherit;
    cursor: pointer;
    display: grid;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    justify-content: center;
    justify-items: center;
    padding: var(--primary-padding);
    transition: filter var(--primary-transition-duration);
}

button:hover
{
    filter: var(--button-hover-filter);
}

button:not(#current-prayer).prayer:hover
{
    cursor: default;
    filter: none;
}

button#current-prayer:hover
{
    transition: var(--primary-transition-duration);
}

/* TODO give option to toggle */
button.horizontal
{
    display: flex;
    gap: var(--primary-gap);
}

.popup-container
{
    margin: var(--primary-margin);
}

.header
{
    align-items: center;
    border-bottom: 1px solid #ccc;
    display: flex;
    justify-content: space-between;
    padding-bottom: var(--primary-padding);
}

.page
{
    width: 100%;
    flex-shrink: 0;
}

.grid-container
{
    display: grid;
    gap: var(--primary-padding);
    padding-top: var(--primary-padding);
}

.prayer-name
{
    color: var(--primary-text-color);
    font-weight: var(--bold-font-weight)
}

.prayer-time
{
    color: var(--secondary-text-color);
}

.logo-icon
{
    width: 32px;
    height: 32px;
}

.title
{
    color: var(--primary-text-color);
    font-weight: bold;
}

.settings-button
{
    display: flex !important;
    width: 24px;

    background-color: #f3f4f6;
    border-radius: var(--primary-border-radius);
    padding: var(--primary-padding);

    transition: filter 0.3s;
}

.notifications-button
{
    display: flex !important;
    width: 14px;

    background-color: #f3f4f6;
    border-radius: var(--primary-border-radius);
    padding: var(--primary-padding);

    transition: filter 0.3s;
}

.settings-button:hover,
.notifications-button:hover
{
    cursor: pointer;
    filter: brightness(.9);
}

.settings-button:active,
.notifications-button:active
{
    filter: brightness(.8);
}

.settings-button.active,
.notifications-button.active
{
    filter: brightness(.8);
}

.content
{
    display: flex;
    transition: transform 0.3s ease;
}

.content.show-settings
{
    transform: translateX(-100%);
}

#settings-page .grid-container>div
{
    border-bottom: 1px solid #ccc;
    /* the horizontal line */
    padding-bottom: 1rem;
    /* space before the line */
}

#settings-page .grid-container>div:last-child
{
    border-bottom: none;
    /* remove line after the last item */
}

.duo-container
{
    display: flex;
    flex-direction: row;
}

.duo-container>*:not(:last-child)
{
    border-right: 1px solid #ccc;
}

.grid-container>div
{
    margin: 0 var(--primary-padding) 0 var(--primary-padding);
}

.location-container
{
    display: flex;
    justify-content: center;
    text-align: center;
    flex-direction: column;
    align-items: center;
}

.location-name
{
    color: var(--primary-text-color);
    font-weight: bold;
    display: inline;
    text-decoration: underline;
}

.location-name:hover
{
    cursor: pointer;
    filter: brightness(1.9);
}

/* Sun time can't shown as prayed */
/* .prayer:nth-of-type(5)
{
    pointer-events: none;
} */

.time-adjust
{
    font-weight: bold;
}

.location-results
{
    position: absolute;
    background-color: #fff;
    border: 1px solid #ccc;
    z-index: 1000;
    display: none;
    text-align: center;
    margin: 0 8px 0 8px;
    border-radius: var(--primary-border-radius);
    color: var(--secondary-text-color);
}

.location-results div
{
    padding: var(--primary-padding);
    border-bottom: 1px solid #eee;
    cursor: pointer;
}

.location-results div:last-child
{
    border-bottom: none;
}

.method-select
{
    text-align: center;
    padding: var(--primary-padding) 0 var(--primary-padding) 0;
    font-size: x-small;
    background-color: #f3f4f6;
    border-radius: var(--primary-border-radius);
    width: 100%;
}

.method-select:hover
{
    cursor: pointer;
    filter: brightness(.9);
}

.method-options
{
    position: absolute;
    background-color: #fff;
    border: 1px solid #ccc;
    z-index: 1000;
    display: none;
    text-align: center;
    border-radius: var(--primary-border-radius);
    color: var(--secondary-text-color);
    font-size: x-small;
    width: 100%;
    top: 75%;
}

.method-options>div
{
    padding: var(--primary-padding);
    border-bottom: 1px solid #eee;
}

.method-options>.selected
{
    font-weight: bold;
    color: var(--primary-text-color);
    background-color: #baebff;
}

.method-options>div:last-child
{
    border-bottom: none;
}

.method-options>div:hover
{
    cursor: pointer;
    background-color: #f3f4f6;
}

.method-container
{
    position: relative;
    display: flex;
    flex-direction: column;
    text-align: center;
    align-items: center;
    gap: 4px;
}

.method-label
{
    /* font-size: small; */
    color: var(--primary-text-color);
}

.flex-container
{
    display: flex;
    gap: var(--primary-padding);
    width: 100%;
}

.loader
{
    z-index: 2000;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    position: absolute;
    animation: rotate .5s linear infinite
}

.loader::before,
.loader::after
{
    content: "";
    box-sizing: border-box;
    position: absolute;
    inset: 0px;
    border-radius: 50%;
    border: 5px solid #FFF;
    animation: prixClipFix 1s ease-in-out infinite alternate;
}

.loader::after
{
    transform: rotate3d(90, 90, 0, 180deg);
    border-color: #FF3D00;
}

@keyframes rotate
{
    from
    {
        transform: rotate(0deg);
    }

    to
    {
        transform: rotate(360deg);
    }
}

@keyframes prixClipFix
{
    0%
    {
        clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);
    }

    50%
    {
        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);
    }

    100%
    {
        clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%);
    }
}